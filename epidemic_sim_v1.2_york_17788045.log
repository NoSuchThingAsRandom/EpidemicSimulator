My working directory is /users/sr1474/scratch/git/V1.2/EpidemicSimulator
Running job on host:
	node030.pri.viking.alces.network at Fri 6 May 16:03:09 BST 2022
1 CPU cores available

Saving results to: 'statistics_results/viking/v1.2/1946157112TYPE299/1/'
warning: unused import: `std::collections::HashMap`
  --> sim/src/disease.rs:21:5
   |
21 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::fs::File`
  --> sim/src/disease.rs:23:5
   |
23 | use std::fs::File;
   |     ^^^^^^^^^^^^^

warning: unused import: `std::hash::Hash`
  --> sim/src/disease.rs:24:5
   |
24 | use std::hash::Hash;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `BufWriter`
  --> sim/src/disease.rs:25:15
   |
25 | use std::io::{BufWriter, Write};
   |               ^^^^^^^^^

warning: unused import: `log::error`
  --> sim/src/disease.rs:27:5
   |
27 | use log::error;
   |     ^^^^^^^^^^

warning: unused import: `Deserialize`
  --> sim/src/disease.rs:28:13
   |
28 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^

warning: unused import: `serde_json::to_writer`
  --> sim/src/disease.rs:29:5
   |
29 | use serde_json::to_writer;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> sim/src/disease.rs:30:5
   |
30 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `crate::models::ID`
  --> sim/src/disease.rs:33:5
   |
33 | use crate::models::ID;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `format`
  --> sim/src/statistics.rs:22:25
   |
22 | use std::fmt::{Display, format, Formatter};
   |                         ^^^^^^

warning: unused import: `anyhow::Context`
  --> sim/src/statistics.rs:29:5
   |
29 | use anyhow::Context;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `error`
  --> sim/src/statistics.rs:30:11
   |
30 | use log::{error, info, warn};
   |           ^^^^^

warning: unused import: `crate::models::building::BuildingID`
  --> sim/src/statistics.rs:37:5
   |
37 | use crate::models::building::BuildingID;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::models::citizen::Citizen`
  --> sim/src/statistics.rs:38:5
   |
38 | use crate::models::citizen::Citizen;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::models::output_area::OutputAreaID`
  --> sim/src/statistics.rs:40:5
   |
40 | use crate::models::output_area::OutputAreaID;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::models::public_transport_route::PublicTransportID`
  --> sim/src/statistics.rs:41:5
   |
41 | use crate::models::public_transport_route::PublicTransportID;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unnecessary trailing semicolon
   --> sim/src/statistics.rs:196:13
    |
196 |             ;
    |             ^ help: remove this semicolon
    |
    = note: `#[warn(redundant_semicolons)]` on by default

warning: unused import: `Write`
  --> sim/src/disease.rs:25:26
   |
25 | use std::io::{BufWriter, Write};
   |                          ^^^^^

warning: variable `hour` is assigned to, but never used
   --> sim/src/interventions.rs:117:33
    |
117 |                 if let Some(mut hour) = self.lockdown {
    |                                 ^^^^
    |
    = note: `#[warn(unused_variables)]` on by default
    = note: consider using `_hour` instead

warning: value assigned to `hour` is never read
   --> sim/src/interventions.rs:118:21
    |
118 |                     hour += 1;
    |                     ^^^^
    |
    = note: `#[warn(unused_assignments)]` on by default
    = help: maybe it is overwritten before being read?

warning: variable `hour` is assigned to, but never used
   --> sim/src/interventions.rs:133:33
    |
133 |                 if let Some(mut hour) = self.vaccination {
    |                                 ^^^^
    |
    = note: consider using `_hour` instead

warning: value assigned to `hour` is never read
   --> sim/src/interventions.rs:134:21
    |
134 |                     hour += 1;
    |                     ^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `exposures`
   --> sim/src/simulator.rs:349:13
    |
349 |         let exposures = self.generate_and_apply_exposures()?;
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exposures`

warning: unused variable: `id`
   --> sim/src/statistics.rs:127:30
    |
127 |                 ID::Building(id) => {}
    |                              ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `entry`
   --> sim/src/statistics.rs:133:29
    |
133 |                     let mut entry = exposure_counts.entry("PublicTransport").or_default();
    |                             ^^^^^ help: if this is intentional, prefix it with an underscore: `_entry`

warning: unused variable: `code`
   --> sim/src/statistics.rs:134:25
    |
134 |                     let code = String::new() + id.source.code() + "-" + id.destination.code();
    |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_code`

warning: unused variable: `time_step`
   --> sim/src/statistics.rs:190:13
    |
190 |         let time_step = self.current_time_step;
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_time_step`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:124:17
    |
124 |             let mut entry = exposure_counts.entry("All").or_default();
    |                 ----^^^^^
    |                 |
    |                 help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:129:25
    |
129 |                     let mut entry = exposure_counts.entry("OutputArea").or_default();
    |                         ----^^^^^
    |                         |
    |                         help: remove this `mut`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:133:25
    |
133 |                     let mut entry = exposure_counts.entry("PublicTransport").or_default();
    |                         ----^^^^^
    |                         |
    |                         help: remove this `mut`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:165:21
    |
165 | ...   let mut recording_entry = self.exposures_per_building_per_time_step.entry(area).or_default();//tatisticEntry::with_time_step(self.c...
    |           ----^^^^^^^^^^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:181:13
    |
181 |         let mut current = self.global_stats.last_mut().expect("Need to call next() to start a recording!");
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:194:17
    |
194 |             let mut stat_entry = current_entry.entry(area_id).or_default();
    |                 ----^^^^^^^^^^
    |                 |
    |                 help: remove this `mut`

warning: variable does not need to be mutable
   --> sim/src/statistics.rs:198:13
    |
198 |         let mut stat_entry = current_entry.entry(location).or_default();
    |             ----^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused `Result` that must be used
   --> sim/src/simulator.rs:346:9
    |
346 |         self.statistics_recorder.next();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
   --> sim/src/statistics.rs:118:9
    |
118 |         self.next();
    |         ^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: 36 warnings emitted

warning: unused variable: `visualise_building_boundaries`
   --> run/src/main.rs:135:9
    |
135 |     let visualise_building_boundaries = matches.is_present("visualise-building-boundaries");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_visualise_building_boundaries`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: 1 warning emitted

    Finished release [optimized] target(s) in 1.35s
     Running `target/release/run 1946157112TYPE299 --directory=data --grid-size=250000 --use-cache --simulate --output_name=statistics_results/viking/v1.2/1946157112TYPE299/1/`
error: Found argument '--use-cache' which wasn't expected, or isn't valid in this context

USAGE:
    run "area_code" --directory<data_directory> --mode
            
    The area code which to use must be specified (area)
    The directory specifying where to store data must be specified (directory)
    There are 4 modes available to choose from:
        Download    ->      Downloads and Verifies the data files for a simulation
        Resume      ->      Used to resume a table download, it if failed for some reason
        Simulate    ->      Starts a text only logging simulation for the given area
        Render      ->      Starts a simulation with a live view of what is happening via a rendering engine


For more information try --help
Job completed at Fri 6 May 16:03:12 BST 2022

============================
 Job utilisation efficiency
============================

Job ID: 17788045
Cluster: viking
User/Group: sr1474/clusterusers
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:00:01
CPU Efficiency: 20.00% of 00:00:05 core-walltime
Job Wall-clock time: 00:00:05
Memory Utilized: 1.06 MB
Memory Efficiency: 0.00% of 32.00 GB
 Requested wall clock time: 04:00:00
    Actual wall clock time: 00:00:05
Wall clock time efficiency: 0.0%
           Job queued time: 00:00:23
